/*
 * AUTOGENERATED - DO NOT EDIT
 *
 * This file is generated from xdg-shell-unstable-v6.xml
 * To regenerate, run the “refresh-wayland-wrapper” target.
 */

#ifndef MIR_FRONTEND_WAYLAND_XDG_SHELL_UNSTABLE_V6_XML_WRAPPER
#define MIR_FRONTEND_WAYLAND_XDG_SHELL_UNSTABLE_V6_XML_WRAPPER

#include <experimental/optional>

#include "mir/fd.h"
#include "../wayland_utils.h"

struct zxdg_shell_v6_interface;
struct zxdg_positioner_v6_interface;
struct zxdg_surface_v6_interface;
struct zxdg_toplevel_v6_interface;
struct zxdg_popup_v6_interface;

namespace mir
{
namespace frontend
{
namespace wayland
{

class XdgShellV6
{
public:
    static XdgShellV6* from(struct wl_resource*);

    XdgShellV6(struct wl_display* display, uint32_t max_version);
    virtual ~XdgShellV6();

    void send_ping_event(struct wl_resource* resource, uint32_t serial) const;

    void destroy_wayland_object(struct wl_resource* resource) const;

    struct wl_global* const global;
    uint32_t const max_version;

    struct Error
    {
        static uint32_t const ROLE = 0;
        static uint32_t const DEFUNCT_SURFACES = 1;
        static uint32_t const NOT_THE_TOPMOST_POPUP = 2;
        static uint32_t const INVALID_POPUP_PARENT = 3;
        static uint32_t const INVALID_SURFACE_STATE = 4;
        static uint32_t const INVALID_POSITIONER = 5;
    };

    struct Opcode
    {
        static uint32_t const PING = 0;
    };

private:
    struct Thunks;

    virtual void bind(struct wl_client* client, struct wl_resource* resource) { (void)client; (void)resource; }

    virtual void destroy(struct wl_client* client, struct wl_resource* resource) = 0;
    virtual void create_positioner(struct wl_client* client, struct wl_resource* resource, uint32_t id) = 0;
    virtual void get_xdg_surface(struct wl_client* client, struct wl_resource* resource, uint32_t id, struct wl_resource* surface) = 0;
    virtual void pong(struct wl_client* client, struct wl_resource* resource, uint32_t serial) = 0;

    static struct zxdg_shell_v6_interface const vtable;
};

class XdgPositionerV6
{
public:
    static XdgPositionerV6* from(struct wl_resource*);

    XdgPositionerV6(struct wl_client* client, struct wl_resource* parent, uint32_t id);
    virtual ~XdgPositionerV6() = default;

    void destroy_wayland_object() const;

    struct wl_client* const client;
    struct wl_resource* const resource;

    struct Error
    {
        static uint32_t const INVALID_INPUT = 0;
    };

    struct Anchor
    {
        static uint32_t const NONE = 0;
        static uint32_t const TOP = 1;
        static uint32_t const BOTTOM = 2;
        static uint32_t const LEFT = 4;
        static uint32_t const RIGHT = 8;
    };

    struct Gravity
    {
        static uint32_t const NONE = 0;
        static uint32_t const TOP = 1;
        static uint32_t const BOTTOM = 2;
        static uint32_t const LEFT = 4;
        static uint32_t const RIGHT = 8;
    };

    struct ConstraintAdjustment
    {
        static uint32_t const NONE = 0;
        static uint32_t const SLIDE_X = 1;
        static uint32_t const SLIDE_Y = 2;
        static uint32_t const FLIP_X = 4;
        static uint32_t const FLIP_Y = 8;
        static uint32_t const RESIZE_X = 16;
        static uint32_t const RESIZE_Y = 32;
    };

private:
    struct Thunks;

    virtual void destroy() = 0;
    virtual void set_size(int32_t width, int32_t height) = 0;
    virtual void set_anchor_rect(int32_t x, int32_t y, int32_t width, int32_t height) = 0;
    virtual void set_anchor(uint32_t anchor) = 0;
    virtual void set_gravity(uint32_t gravity) = 0;
    virtual void set_constraint_adjustment(uint32_t constraint_adjustment) = 0;
    virtual void set_offset(int32_t x, int32_t y) = 0;

    static struct zxdg_positioner_v6_interface const vtable;
};

class XdgSurfaceV6
{
public:
    static XdgSurfaceV6* from(struct wl_resource*);

    XdgSurfaceV6(struct wl_client* client, struct wl_resource* parent, uint32_t id);
    virtual ~XdgSurfaceV6() = default;

    void send_configure_event(uint32_t serial) const;

    void destroy_wayland_object() const;

    struct wl_client* const client;
    struct wl_resource* const resource;

    struct Error
    {
        static uint32_t const NOT_CONSTRUCTED = 1;
        static uint32_t const ALREADY_CONSTRUCTED = 2;
        static uint32_t const UNCONFIGURED_BUFFER = 3;
    };

    struct Opcode
    {
        static uint32_t const CONFIGURE = 0;
    };

private:
    struct Thunks;

    virtual void destroy() = 0;
    virtual void get_toplevel(uint32_t id) = 0;
    virtual void get_popup(uint32_t id, struct wl_resource* parent, struct wl_resource* positioner) = 0;
    virtual void set_window_geometry(int32_t x, int32_t y, int32_t width, int32_t height) = 0;
    virtual void ack_configure(uint32_t serial) = 0;

    static struct zxdg_surface_v6_interface const vtable;
};

class XdgToplevelV6
{
public:
    static XdgToplevelV6* from(struct wl_resource*);

    XdgToplevelV6(struct wl_client* client, struct wl_resource* parent, uint32_t id);
    virtual ~XdgToplevelV6() = default;

    void send_configure_event(int32_t width, int32_t height, struct wl_array* states) const;
    void send_close_event() const;

    void destroy_wayland_object() const;

    struct wl_client* const client;
    struct wl_resource* const resource;

    struct ResizeEdge
    {
        static uint32_t const NONE = 0;
        static uint32_t const TOP = 1;
        static uint32_t const BOTTOM = 2;
        static uint32_t const LEFT = 4;
        static uint32_t const TOP_LEFT = 5;
        static uint32_t const BOTTOM_LEFT = 6;
        static uint32_t const RIGHT = 8;
        static uint32_t const TOP_RIGHT = 9;
        static uint32_t const BOTTOM_RIGHT = 10;
    };

    struct State
    {
        static uint32_t const MAXIMIZED = 1;
        static uint32_t const FULLSCREEN = 2;
        static uint32_t const RESIZING = 3;
        static uint32_t const ACTIVATED = 4;
    };

    struct Opcode
    {
        static uint32_t const CONFIGURE = 0;
        static uint32_t const CLOSE = 1;
    };

private:
    struct Thunks;

    virtual void destroy() = 0;
    virtual void set_parent(std::experimental::optional<struct wl_resource*> const& parent) = 0;
    virtual void set_title(std::string const& title) = 0;
    virtual void set_app_id(std::string const& app_id) = 0;
    virtual void show_window_menu(struct wl_resource* seat, uint32_t serial, int32_t x, int32_t y) = 0;
    virtual void move(struct wl_resource* seat, uint32_t serial) = 0;
    virtual void resize(struct wl_resource* seat, uint32_t serial, uint32_t edges) = 0;
    virtual void set_max_size(int32_t width, int32_t height) = 0;
    virtual void set_min_size(int32_t width, int32_t height) = 0;
    virtual void set_maximized() = 0;
    virtual void unset_maximized() = 0;
    virtual void set_fullscreen(std::experimental::optional<struct wl_resource*> const& output) = 0;
    virtual void unset_fullscreen() = 0;
    virtual void set_minimized() = 0;

    static struct zxdg_toplevel_v6_interface const vtable;
};

class XdgPopupV6
{
public:
    static XdgPopupV6* from(struct wl_resource*);

    XdgPopupV6(struct wl_client* client, struct wl_resource* parent, uint32_t id);
    virtual ~XdgPopupV6() = default;

    void send_configure_event(int32_t x, int32_t y, int32_t width, int32_t height) const;
    void send_popup_done_event() const;

    void destroy_wayland_object() const;

    struct wl_client* const client;
    struct wl_resource* const resource;

    struct Error
    {
        static uint32_t const INVALID_GRAB = 0;
    };

    struct Opcode
    {
        static uint32_t const CONFIGURE = 0;
        static uint32_t const POPUP_DONE = 1;
    };

private:
    struct Thunks;

    virtual void destroy() = 0;
    virtual void grab(struct wl_resource* seat, uint32_t serial) = 0;

    static struct zxdg_popup_v6_interface const vtable;
};

}
}
}

#endif // MIR_FRONTEND_WAYLAND_XDG_SHELL_UNSTABLE_V6_XML_WRAPPER
